/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/direct/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MailMailAddressLister helps list MailMailAddresses.
// All objects returned here must be treated as read-only.
type MailMailAddressLister interface {
	// List lists all MailMailAddresses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MailMailAddress, err error)
	// MailMailAddresses returns an object that can list and get MailMailAddresses.
	MailMailAddresses(namespace string) MailMailAddressNamespaceLister
	MailMailAddressListerExpansion
}

// mailMailAddressLister implements the MailMailAddressLister interface.
type mailMailAddressLister struct {
	indexer cache.Indexer
}

// NewMailMailAddressLister returns a new MailMailAddressLister.
func NewMailMailAddressLister(indexer cache.Indexer) MailMailAddressLister {
	return &mailMailAddressLister{indexer: indexer}
}

// List lists all MailMailAddresses in the indexer.
func (s *mailMailAddressLister) List(selector labels.Selector) (ret []*v1alpha1.MailMailAddress, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MailMailAddress))
	})
	return ret, err
}

// MailMailAddresses returns an object that can list and get MailMailAddresses.
func (s *mailMailAddressLister) MailMailAddresses(namespace string) MailMailAddressNamespaceLister {
	return mailMailAddressNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MailMailAddressNamespaceLister helps list and get MailMailAddresses.
// All objects returned here must be treated as read-only.
type MailMailAddressNamespaceLister interface {
	// List lists all MailMailAddresses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MailMailAddress, err error)
	// Get retrieves the MailMailAddress from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MailMailAddress, error)
	MailMailAddressNamespaceListerExpansion
}

// mailMailAddressNamespaceLister implements the MailMailAddressNamespaceLister
// interface.
type mailMailAddressNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MailMailAddresses in the indexer for a given namespace.
func (s mailMailAddressNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MailMailAddress, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MailMailAddress))
	})
	return ret, err
}

// Get retrieves the MailMailAddress from the indexer for a given namespace and name.
func (s mailMailAddressNamespaceLister) Get(name string) (*v1alpha1.MailMailAddress, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mailmailaddress"), name)
	}
	return obj.(*v1alpha1.MailMailAddress), nil
}
