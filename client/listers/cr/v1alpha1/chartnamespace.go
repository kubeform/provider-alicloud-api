/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cr/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ChartNamespaceLister helps list ChartNamespaces.
// All objects returned here must be treated as read-only.
type ChartNamespaceLister interface {
	// List lists all ChartNamespaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ChartNamespace, err error)
	// ChartNamespaces returns an object that can list and get ChartNamespaces.
	ChartNamespaces(namespace string) ChartNamespaceNamespaceLister
	ChartNamespaceListerExpansion
}

// chartNamespaceLister implements the ChartNamespaceLister interface.
type chartNamespaceLister struct {
	indexer cache.Indexer
}

// NewChartNamespaceLister returns a new ChartNamespaceLister.
func NewChartNamespaceLister(indexer cache.Indexer) ChartNamespaceLister {
	return &chartNamespaceLister{indexer: indexer}
}

// List lists all ChartNamespaces in the indexer.
func (s *chartNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ChartNamespace, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChartNamespace))
	})
	return ret, err
}

// ChartNamespaces returns an object that can list and get ChartNamespaces.
func (s *chartNamespaceLister) ChartNamespaces(namespace string) ChartNamespaceNamespaceLister {
	return chartNamespaceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ChartNamespaceNamespaceLister helps list and get ChartNamespaces.
// All objects returned here must be treated as read-only.
type ChartNamespaceNamespaceLister interface {
	// List lists all ChartNamespaces in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ChartNamespace, err error)
	// Get retrieves the ChartNamespace from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ChartNamespace, error)
	ChartNamespaceNamespaceListerExpansion
}

// chartNamespaceNamespaceLister implements the ChartNamespaceNamespaceLister
// interface.
type chartNamespaceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ChartNamespaces in the indexer for a given namespace.
func (s chartNamespaceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ChartNamespace, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChartNamespace))
	})
	return ret, err
}

// Get retrieves the ChartNamespace from the indexer for a given namespace and name.
func (s chartNamespaceNamespaceLister) Get(name string) (*v1alpha1.ChartNamespace, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("chartnamespace"), name)
	}
	return obj.(*v1alpha1.ChartNamespace), nil
}
