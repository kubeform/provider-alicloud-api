/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/edas/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DeployGroupLister helps list DeployGroups.
// All objects returned here must be treated as read-only.
type DeployGroupLister interface {
	// List lists all DeployGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DeployGroup, err error)
	// DeployGroups returns an object that can list and get DeployGroups.
	DeployGroups(namespace string) DeployGroupNamespaceLister
	DeployGroupListerExpansion
}

// deployGroupLister implements the DeployGroupLister interface.
type deployGroupLister struct {
	indexer cache.Indexer
}

// NewDeployGroupLister returns a new DeployGroupLister.
func NewDeployGroupLister(indexer cache.Indexer) DeployGroupLister {
	return &deployGroupLister{indexer: indexer}
}

// List lists all DeployGroups in the indexer.
func (s *deployGroupLister) List(selector labels.Selector) (ret []*v1alpha1.DeployGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DeployGroup))
	})
	return ret, err
}

// DeployGroups returns an object that can list and get DeployGroups.
func (s *deployGroupLister) DeployGroups(namespace string) DeployGroupNamespaceLister {
	return deployGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DeployGroupNamespaceLister helps list and get DeployGroups.
// All objects returned here must be treated as read-only.
type DeployGroupNamespaceLister interface {
	// List lists all DeployGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DeployGroup, err error)
	// Get retrieves the DeployGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DeployGroup, error)
	DeployGroupNamespaceListerExpansion
}

// deployGroupNamespaceLister implements the DeployGroupNamespaceLister
// interface.
type deployGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DeployGroups in the indexer for a given namespace.
func (s deployGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DeployGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DeployGroup))
	})
	return ret, err
}

// Get retrieves the DeployGroup from the indexer for a given namespace and name.
func (s deployGroupNamespaceLister) Get(name string) (*v1alpha1.DeployGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("deploygroup"), name)
	}
	return obj.(*v1alpha1.DeployGroup), nil
}
