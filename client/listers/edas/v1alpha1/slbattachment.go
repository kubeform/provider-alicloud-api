/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/edas/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SlbAttachmentLister helps list SlbAttachments.
// All objects returned here must be treated as read-only.
type SlbAttachmentLister interface {
	// List lists all SlbAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SlbAttachment, err error)
	// SlbAttachments returns an object that can list and get SlbAttachments.
	SlbAttachments(namespace string) SlbAttachmentNamespaceLister
	SlbAttachmentListerExpansion
}

// slbAttachmentLister implements the SlbAttachmentLister interface.
type slbAttachmentLister struct {
	indexer cache.Indexer
}

// NewSlbAttachmentLister returns a new SlbAttachmentLister.
func NewSlbAttachmentLister(indexer cache.Indexer) SlbAttachmentLister {
	return &slbAttachmentLister{indexer: indexer}
}

// List lists all SlbAttachments in the indexer.
func (s *slbAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.SlbAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SlbAttachment))
	})
	return ret, err
}

// SlbAttachments returns an object that can list and get SlbAttachments.
func (s *slbAttachmentLister) SlbAttachments(namespace string) SlbAttachmentNamespaceLister {
	return slbAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SlbAttachmentNamespaceLister helps list and get SlbAttachments.
// All objects returned here must be treated as read-only.
type SlbAttachmentNamespaceLister interface {
	// List lists all SlbAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SlbAttachment, err error)
	// Get retrieves the SlbAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SlbAttachment, error)
	SlbAttachmentNamespaceListerExpansion
}

// slbAttachmentNamespaceLister implements the SlbAttachmentNamespaceLister
// interface.
type slbAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SlbAttachments in the indexer for a given namespace.
func (s slbAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SlbAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SlbAttachment))
	})
	return ret, err
}

// Get retrieves the SlbAttachment from the indexer for a given namespace and name.
func (s slbAttachmentNamespaceLister) Get(name string) (*v1alpha1.SlbAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("slbattachment"), name)
	}
	return obj.(*v1alpha1.SlbAttachment), nil
}
