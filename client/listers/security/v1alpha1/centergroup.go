/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/security/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CenterGroupLister helps list CenterGroups.
// All objects returned here must be treated as read-only.
type CenterGroupLister interface {
	// List lists all CenterGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterGroup, err error)
	// CenterGroups returns an object that can list and get CenterGroups.
	CenterGroups(namespace string) CenterGroupNamespaceLister
	CenterGroupListerExpansion
}

// centerGroupLister implements the CenterGroupLister interface.
type centerGroupLister struct {
	indexer cache.Indexer
}

// NewCenterGroupLister returns a new CenterGroupLister.
func NewCenterGroupLister(indexer cache.Indexer) CenterGroupLister {
	return &centerGroupLister{indexer: indexer}
}

// List lists all CenterGroups in the indexer.
func (s *centerGroupLister) List(selector labels.Selector) (ret []*v1alpha1.CenterGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterGroup))
	})
	return ret, err
}

// CenterGroups returns an object that can list and get CenterGroups.
func (s *centerGroupLister) CenterGroups(namespace string) CenterGroupNamespaceLister {
	return centerGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CenterGroupNamespaceLister helps list and get CenterGroups.
// All objects returned here must be treated as read-only.
type CenterGroupNamespaceLister interface {
	// List lists all CenterGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterGroup, err error)
	// Get retrieves the CenterGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CenterGroup, error)
	CenterGroupNamespaceListerExpansion
}

// centerGroupNamespaceLister implements the CenterGroupNamespaceLister
// interface.
type centerGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CenterGroups in the indexer for a given namespace.
func (s centerGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CenterGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterGroup))
	})
	return ret, err
}

// Get retrieves the CenterGroup from the indexer for a given namespace and name.
func (s centerGroupNamespaceLister) Get(name string) (*v1alpha1.CenterGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("centergroup"), name)
	}
	return obj.(*v1alpha1.CenterGroup), nil
}
