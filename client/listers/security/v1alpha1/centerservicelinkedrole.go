/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/security/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CenterServiceLinkedRoleLister helps list CenterServiceLinkedRoles.
// All objects returned here must be treated as read-only.
type CenterServiceLinkedRoleLister interface {
	// List lists all CenterServiceLinkedRoles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterServiceLinkedRole, err error)
	// CenterServiceLinkedRoles returns an object that can list and get CenterServiceLinkedRoles.
	CenterServiceLinkedRoles(namespace string) CenterServiceLinkedRoleNamespaceLister
	CenterServiceLinkedRoleListerExpansion
}

// centerServiceLinkedRoleLister implements the CenterServiceLinkedRoleLister interface.
type centerServiceLinkedRoleLister struct {
	indexer cache.Indexer
}

// NewCenterServiceLinkedRoleLister returns a new CenterServiceLinkedRoleLister.
func NewCenterServiceLinkedRoleLister(indexer cache.Indexer) CenterServiceLinkedRoleLister {
	return &centerServiceLinkedRoleLister{indexer: indexer}
}

// List lists all CenterServiceLinkedRoles in the indexer.
func (s *centerServiceLinkedRoleLister) List(selector labels.Selector) (ret []*v1alpha1.CenterServiceLinkedRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterServiceLinkedRole))
	})
	return ret, err
}

// CenterServiceLinkedRoles returns an object that can list and get CenterServiceLinkedRoles.
func (s *centerServiceLinkedRoleLister) CenterServiceLinkedRoles(namespace string) CenterServiceLinkedRoleNamespaceLister {
	return centerServiceLinkedRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CenterServiceLinkedRoleNamespaceLister helps list and get CenterServiceLinkedRoles.
// All objects returned here must be treated as read-only.
type CenterServiceLinkedRoleNamespaceLister interface {
	// List lists all CenterServiceLinkedRoles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterServiceLinkedRole, err error)
	// Get retrieves the CenterServiceLinkedRole from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CenterServiceLinkedRole, error)
	CenterServiceLinkedRoleNamespaceListerExpansion
}

// centerServiceLinkedRoleNamespaceLister implements the CenterServiceLinkedRoleNamespaceLister
// interface.
type centerServiceLinkedRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CenterServiceLinkedRoles in the indexer for a given namespace.
func (s centerServiceLinkedRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CenterServiceLinkedRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterServiceLinkedRole))
	})
	return ret, err
}

// Get retrieves the CenterServiceLinkedRole from the indexer for a given namespace and name.
func (s centerServiceLinkedRoleNamespaceLister) Get(name string) (*v1alpha1.CenterServiceLinkedRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("centerservicelinkedrole"), name)
	}
	return obj.(*v1alpha1.CenterServiceLinkedRole), nil
}
