/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/slb/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MasterSlaveServerGroupLister helps list MasterSlaveServerGroups.
// All objects returned here must be treated as read-only.
type MasterSlaveServerGroupLister interface {
	// List lists all MasterSlaveServerGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MasterSlaveServerGroup, err error)
	// MasterSlaveServerGroups returns an object that can list and get MasterSlaveServerGroups.
	MasterSlaveServerGroups(namespace string) MasterSlaveServerGroupNamespaceLister
	MasterSlaveServerGroupListerExpansion
}

// masterSlaveServerGroupLister implements the MasterSlaveServerGroupLister interface.
type masterSlaveServerGroupLister struct {
	indexer cache.Indexer
}

// NewMasterSlaveServerGroupLister returns a new MasterSlaveServerGroupLister.
func NewMasterSlaveServerGroupLister(indexer cache.Indexer) MasterSlaveServerGroupLister {
	return &masterSlaveServerGroupLister{indexer: indexer}
}

// List lists all MasterSlaveServerGroups in the indexer.
func (s *masterSlaveServerGroupLister) List(selector labels.Selector) (ret []*v1alpha1.MasterSlaveServerGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MasterSlaveServerGroup))
	})
	return ret, err
}

// MasterSlaveServerGroups returns an object that can list and get MasterSlaveServerGroups.
func (s *masterSlaveServerGroupLister) MasterSlaveServerGroups(namespace string) MasterSlaveServerGroupNamespaceLister {
	return masterSlaveServerGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MasterSlaveServerGroupNamespaceLister helps list and get MasterSlaveServerGroups.
// All objects returned here must be treated as read-only.
type MasterSlaveServerGroupNamespaceLister interface {
	// List lists all MasterSlaveServerGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MasterSlaveServerGroup, err error)
	// Get retrieves the MasterSlaveServerGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MasterSlaveServerGroup, error)
	MasterSlaveServerGroupNamespaceListerExpansion
}

// masterSlaveServerGroupNamespaceLister implements the MasterSlaveServerGroupNamespaceLister
// interface.
type masterSlaveServerGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MasterSlaveServerGroups in the indexer for a given namespace.
func (s masterSlaveServerGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MasterSlaveServerGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MasterSlaveServerGroup))
	})
	return ret, err
}

// Get retrieves the MasterSlaveServerGroup from the indexer for a given namespace and name.
func (s masterSlaveServerGroupNamespaceLister) Get(name string) (*v1alpha1.MasterSlaveServerGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("masterslaveservergroup"), name)
	}
	return obj.(*v1alpha1.MasterSlaveServerGroup), nil
}
