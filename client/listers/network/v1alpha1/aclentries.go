/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/network/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AclEntriesLister helps list AclEntrieses.
// All objects returned here must be treated as read-only.
type AclEntriesLister interface {
	// List lists all AclEntrieses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AclEntries, err error)
	// AclEntrieses returns an object that can list and get AclEntrieses.
	AclEntrieses(namespace string) AclEntriesNamespaceLister
	AclEntriesListerExpansion
}

// aclEntriesLister implements the AclEntriesLister interface.
type aclEntriesLister struct {
	indexer cache.Indexer
}

// NewAclEntriesLister returns a new AclEntriesLister.
func NewAclEntriesLister(indexer cache.Indexer) AclEntriesLister {
	return &aclEntriesLister{indexer: indexer}
}

// List lists all AclEntrieses in the indexer.
func (s *aclEntriesLister) List(selector labels.Selector) (ret []*v1alpha1.AclEntries, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AclEntries))
	})
	return ret, err
}

// AclEntrieses returns an object that can list and get AclEntrieses.
func (s *aclEntriesLister) AclEntrieses(namespace string) AclEntriesNamespaceLister {
	return aclEntriesNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AclEntriesNamespaceLister helps list and get AclEntrieses.
// All objects returned here must be treated as read-only.
type AclEntriesNamespaceLister interface {
	// List lists all AclEntrieses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AclEntries, err error)
	// Get retrieves the AclEntries from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AclEntries, error)
	AclEntriesNamespaceListerExpansion
}

// aclEntriesNamespaceLister implements the AclEntriesNamespaceLister
// interface.
type aclEntriesNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AclEntrieses in the indexer for a given namespace.
func (s aclEntriesNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AclEntries, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AclEntries))
	})
	return ret, err
}

// Get retrieves the AclEntries from the indexer for a given namespace and name.
func (s aclEntriesNamespaceLister) Get(name string) (*v1alpha1.AclEntries, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("aclentries"), name)
	}
	return obj.(*v1alpha1.AclEntries), nil
}
