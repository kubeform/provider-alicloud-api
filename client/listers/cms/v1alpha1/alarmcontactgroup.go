/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cms/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AlarmContactGroupLister helps list AlarmContactGroups.
// All objects returned here must be treated as read-only.
type AlarmContactGroupLister interface {
	// List lists all AlarmContactGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlarmContactGroup, err error)
	// AlarmContactGroups returns an object that can list and get AlarmContactGroups.
	AlarmContactGroups(namespace string) AlarmContactGroupNamespaceLister
	AlarmContactGroupListerExpansion
}

// alarmContactGroupLister implements the AlarmContactGroupLister interface.
type alarmContactGroupLister struct {
	indexer cache.Indexer
}

// NewAlarmContactGroupLister returns a new AlarmContactGroupLister.
func NewAlarmContactGroupLister(indexer cache.Indexer) AlarmContactGroupLister {
	return &alarmContactGroupLister{indexer: indexer}
}

// List lists all AlarmContactGroups in the indexer.
func (s *alarmContactGroupLister) List(selector labels.Selector) (ret []*v1alpha1.AlarmContactGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlarmContactGroup))
	})
	return ret, err
}

// AlarmContactGroups returns an object that can list and get AlarmContactGroups.
func (s *alarmContactGroupLister) AlarmContactGroups(namespace string) AlarmContactGroupNamespaceLister {
	return alarmContactGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AlarmContactGroupNamespaceLister helps list and get AlarmContactGroups.
// All objects returned here must be treated as read-only.
type AlarmContactGroupNamespaceLister interface {
	// List lists all AlarmContactGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlarmContactGroup, err error)
	// Get retrieves the AlarmContactGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AlarmContactGroup, error)
	AlarmContactGroupNamespaceListerExpansion
}

// alarmContactGroupNamespaceLister implements the AlarmContactGroupNamespaceLister
// interface.
type alarmContactGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AlarmContactGroups in the indexer for a given namespace.
func (s alarmContactGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AlarmContactGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlarmContactGroup))
	})
	return ret, err
}

// Get retrieves the AlarmContactGroup from the indexer for a given namespace and name.
func (s alarmContactGroupNamespaceLister) Get(name string) (*v1alpha1.AlarmContactGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("alarmcontactgroup"), name)
	}
	return obj.(*v1alpha1.AlarmContactGroup), nil
}
