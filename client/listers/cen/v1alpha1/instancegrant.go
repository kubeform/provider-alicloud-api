/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cen/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstanceGrantLister helps list InstanceGrants.
// All objects returned here must be treated as read-only.
type InstanceGrantLister interface {
	// List lists all InstanceGrants in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceGrant, err error)
	// InstanceGrants returns an object that can list and get InstanceGrants.
	InstanceGrants(namespace string) InstanceGrantNamespaceLister
	InstanceGrantListerExpansion
}

// instanceGrantLister implements the InstanceGrantLister interface.
type instanceGrantLister struct {
	indexer cache.Indexer
}

// NewInstanceGrantLister returns a new InstanceGrantLister.
func NewInstanceGrantLister(indexer cache.Indexer) InstanceGrantLister {
	return &instanceGrantLister{indexer: indexer}
}

// List lists all InstanceGrants in the indexer.
func (s *instanceGrantLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceGrant, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceGrant))
	})
	return ret, err
}

// InstanceGrants returns an object that can list and get InstanceGrants.
func (s *instanceGrantLister) InstanceGrants(namespace string) InstanceGrantNamespaceLister {
	return instanceGrantNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstanceGrantNamespaceLister helps list and get InstanceGrants.
// All objects returned here must be treated as read-only.
type InstanceGrantNamespaceLister interface {
	// List lists all InstanceGrants in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceGrant, err error)
	// Get retrieves the InstanceGrant from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InstanceGrant, error)
	InstanceGrantNamespaceListerExpansion
}

// instanceGrantNamespaceLister implements the InstanceGrantNamespaceLister
// interface.
type instanceGrantNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstanceGrants in the indexer for a given namespace.
func (s instanceGrantNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceGrant, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceGrant))
	})
	return ret, err
}

// Get retrieves the InstanceGrant from the indexer for a given namespace and name.
func (s instanceGrantNamespaceLister) Get(name string) (*v1alpha1.InstanceGrant, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("instancegrant"), name)
	}
	return obj.(*v1alpha1.InstanceGrant), nil
}
