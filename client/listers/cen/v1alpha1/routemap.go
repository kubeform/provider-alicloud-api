/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cen/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RouteMapLister helps list RouteMaps.
// All objects returned here must be treated as read-only.
type RouteMapLister interface {
	// List lists all RouteMaps in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RouteMap, err error)
	// RouteMaps returns an object that can list and get RouteMaps.
	RouteMaps(namespace string) RouteMapNamespaceLister
	RouteMapListerExpansion
}

// routeMapLister implements the RouteMapLister interface.
type routeMapLister struct {
	indexer cache.Indexer
}

// NewRouteMapLister returns a new RouteMapLister.
func NewRouteMapLister(indexer cache.Indexer) RouteMapLister {
	return &routeMapLister{indexer: indexer}
}

// List lists all RouteMaps in the indexer.
func (s *routeMapLister) List(selector labels.Selector) (ret []*v1alpha1.RouteMap, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RouteMap))
	})
	return ret, err
}

// RouteMaps returns an object that can list and get RouteMaps.
func (s *routeMapLister) RouteMaps(namespace string) RouteMapNamespaceLister {
	return routeMapNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RouteMapNamespaceLister helps list and get RouteMaps.
// All objects returned here must be treated as read-only.
type RouteMapNamespaceLister interface {
	// List lists all RouteMaps in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RouteMap, err error)
	// Get retrieves the RouteMap from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RouteMap, error)
	RouteMapNamespaceListerExpansion
}

// routeMapNamespaceLister implements the RouteMapNamespaceLister
// interface.
type routeMapNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RouteMaps in the indexer for a given namespace.
func (s routeMapNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RouteMap, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RouteMap))
	})
	return ret, err
}

// Get retrieves the RouteMap from the indexer for a given namespace and name.
func (s routeMapNamespaceLister) Get(name string) (*v1alpha1.RouteMap, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("routemap"), name)
	}
	return obj.(*v1alpha1.RouteMap), nil
}
