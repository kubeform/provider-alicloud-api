/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cen/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TransitRouterRouteTablePropagationLister helps list TransitRouterRouteTablePropagations.
// All objects returned here must be treated as read-only.
type TransitRouterRouteTablePropagationLister interface {
	// List lists all TransitRouterRouteTablePropagations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitRouterRouteTablePropagation, err error)
	// TransitRouterRouteTablePropagations returns an object that can list and get TransitRouterRouteTablePropagations.
	TransitRouterRouteTablePropagations(namespace string) TransitRouterRouteTablePropagationNamespaceLister
	TransitRouterRouteTablePropagationListerExpansion
}

// transitRouterRouteTablePropagationLister implements the TransitRouterRouteTablePropagationLister interface.
type transitRouterRouteTablePropagationLister struct {
	indexer cache.Indexer
}

// NewTransitRouterRouteTablePropagationLister returns a new TransitRouterRouteTablePropagationLister.
func NewTransitRouterRouteTablePropagationLister(indexer cache.Indexer) TransitRouterRouteTablePropagationLister {
	return &transitRouterRouteTablePropagationLister{indexer: indexer}
}

// List lists all TransitRouterRouteTablePropagations in the indexer.
func (s *transitRouterRouteTablePropagationLister) List(selector labels.Selector) (ret []*v1alpha1.TransitRouterRouteTablePropagation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitRouterRouteTablePropagation))
	})
	return ret, err
}

// TransitRouterRouteTablePropagations returns an object that can list and get TransitRouterRouteTablePropagations.
func (s *transitRouterRouteTablePropagationLister) TransitRouterRouteTablePropagations(namespace string) TransitRouterRouteTablePropagationNamespaceLister {
	return transitRouterRouteTablePropagationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransitRouterRouteTablePropagationNamespaceLister helps list and get TransitRouterRouteTablePropagations.
// All objects returned here must be treated as read-only.
type TransitRouterRouteTablePropagationNamespaceLister interface {
	// List lists all TransitRouterRouteTablePropagations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransitRouterRouteTablePropagation, err error)
	// Get retrieves the TransitRouterRouteTablePropagation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TransitRouterRouteTablePropagation, error)
	TransitRouterRouteTablePropagationNamespaceListerExpansion
}

// transitRouterRouteTablePropagationNamespaceLister implements the TransitRouterRouteTablePropagationNamespaceLister
// interface.
type transitRouterRouteTablePropagationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransitRouterRouteTablePropagations in the indexer for a given namespace.
func (s transitRouterRouteTablePropagationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransitRouterRouteTablePropagation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransitRouterRouteTablePropagation))
	})
	return ret, err
}

// Get retrieves the TransitRouterRouteTablePropagation from the indexer for a given namespace and name.
func (s transitRouterRouteTablePropagationNamespaceLister) Get(name string) (*v1alpha1.TransitRouterRouteTablePropagation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transitrouterroutetablepropagation"), name)
	}
	return obj.(*v1alpha1.TransitRouterRouteTablePropagation), nil
}
