/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cloud/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SsoScimServerCredentialLister helps list SsoScimServerCredentials.
// All objects returned here must be treated as read-only.
type SsoScimServerCredentialLister interface {
	// List lists all SsoScimServerCredentials in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SsoScimServerCredential, err error)
	// SsoScimServerCredentials returns an object that can list and get SsoScimServerCredentials.
	SsoScimServerCredentials(namespace string) SsoScimServerCredentialNamespaceLister
	SsoScimServerCredentialListerExpansion
}

// ssoScimServerCredentialLister implements the SsoScimServerCredentialLister interface.
type ssoScimServerCredentialLister struct {
	indexer cache.Indexer
}

// NewSsoScimServerCredentialLister returns a new SsoScimServerCredentialLister.
func NewSsoScimServerCredentialLister(indexer cache.Indexer) SsoScimServerCredentialLister {
	return &ssoScimServerCredentialLister{indexer: indexer}
}

// List lists all SsoScimServerCredentials in the indexer.
func (s *ssoScimServerCredentialLister) List(selector labels.Selector) (ret []*v1alpha1.SsoScimServerCredential, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsoScimServerCredential))
	})
	return ret, err
}

// SsoScimServerCredentials returns an object that can list and get SsoScimServerCredentials.
func (s *ssoScimServerCredentialLister) SsoScimServerCredentials(namespace string) SsoScimServerCredentialNamespaceLister {
	return ssoScimServerCredentialNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SsoScimServerCredentialNamespaceLister helps list and get SsoScimServerCredentials.
// All objects returned here must be treated as read-only.
type SsoScimServerCredentialNamespaceLister interface {
	// List lists all SsoScimServerCredentials in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SsoScimServerCredential, err error)
	// Get retrieves the SsoScimServerCredential from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SsoScimServerCredential, error)
	SsoScimServerCredentialNamespaceListerExpansion
}

// ssoScimServerCredentialNamespaceLister implements the SsoScimServerCredentialNamespaceLister
// interface.
type ssoScimServerCredentialNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SsoScimServerCredentials in the indexer for a given namespace.
func (s ssoScimServerCredentialNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SsoScimServerCredential, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsoScimServerCredential))
	})
	return ret, err
}

// Get retrieves the SsoScimServerCredential from the indexer for a given namespace and name.
func (s ssoScimServerCredentialNamespaceLister) Get(name string) (*v1alpha1.SsoScimServerCredential, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ssoscimservercredential"), name)
	}
	return obj.(*v1alpha1.SsoScimServerCredential), nil
}
