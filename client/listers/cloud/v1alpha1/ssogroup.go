/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cloud/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SsoGroupLister helps list SsoGroups.
// All objects returned here must be treated as read-only.
type SsoGroupLister interface {
	// List lists all SsoGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SsoGroup, err error)
	// SsoGroups returns an object that can list and get SsoGroups.
	SsoGroups(namespace string) SsoGroupNamespaceLister
	SsoGroupListerExpansion
}

// ssoGroupLister implements the SsoGroupLister interface.
type ssoGroupLister struct {
	indexer cache.Indexer
}

// NewSsoGroupLister returns a new SsoGroupLister.
func NewSsoGroupLister(indexer cache.Indexer) SsoGroupLister {
	return &ssoGroupLister{indexer: indexer}
}

// List lists all SsoGroups in the indexer.
func (s *ssoGroupLister) List(selector labels.Selector) (ret []*v1alpha1.SsoGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsoGroup))
	})
	return ret, err
}

// SsoGroups returns an object that can list and get SsoGroups.
func (s *ssoGroupLister) SsoGroups(namespace string) SsoGroupNamespaceLister {
	return ssoGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SsoGroupNamespaceLister helps list and get SsoGroups.
// All objects returned here must be treated as read-only.
type SsoGroupNamespaceLister interface {
	// List lists all SsoGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SsoGroup, err error)
	// Get retrieves the SsoGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SsoGroup, error)
	SsoGroupNamespaceListerExpansion
}

// ssoGroupNamespaceLister implements the SsoGroupNamespaceLister
// interface.
type ssoGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SsoGroups in the indexer for a given namespace.
func (s ssoGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SsoGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsoGroup))
	})
	return ret, err
}

// Get retrieves the SsoGroup from the indexer for a given namespace and name.
func (s ssoGroupNamespaceLister) Get(name string) (*v1alpha1.SsoGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ssogroup"), name)
	}
	return obj.(*v1alpha1.SsoGroup), nil
}
