/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cloud/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StorageGatewayGatewayLoggingLister helps list StorageGatewayGatewayLoggings.
// All objects returned here must be treated as read-only.
type StorageGatewayGatewayLoggingLister interface {
	// List lists all StorageGatewayGatewayLoggings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.StorageGatewayGatewayLogging, err error)
	// StorageGatewayGatewayLoggings returns an object that can list and get StorageGatewayGatewayLoggings.
	StorageGatewayGatewayLoggings(namespace string) StorageGatewayGatewayLoggingNamespaceLister
	StorageGatewayGatewayLoggingListerExpansion
}

// storageGatewayGatewayLoggingLister implements the StorageGatewayGatewayLoggingLister interface.
type storageGatewayGatewayLoggingLister struct {
	indexer cache.Indexer
}

// NewStorageGatewayGatewayLoggingLister returns a new StorageGatewayGatewayLoggingLister.
func NewStorageGatewayGatewayLoggingLister(indexer cache.Indexer) StorageGatewayGatewayLoggingLister {
	return &storageGatewayGatewayLoggingLister{indexer: indexer}
}

// List lists all StorageGatewayGatewayLoggings in the indexer.
func (s *storageGatewayGatewayLoggingLister) List(selector labels.Selector) (ret []*v1alpha1.StorageGatewayGatewayLogging, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StorageGatewayGatewayLogging))
	})
	return ret, err
}

// StorageGatewayGatewayLoggings returns an object that can list and get StorageGatewayGatewayLoggings.
func (s *storageGatewayGatewayLoggingLister) StorageGatewayGatewayLoggings(namespace string) StorageGatewayGatewayLoggingNamespaceLister {
	return storageGatewayGatewayLoggingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StorageGatewayGatewayLoggingNamespaceLister helps list and get StorageGatewayGatewayLoggings.
// All objects returned here must be treated as read-only.
type StorageGatewayGatewayLoggingNamespaceLister interface {
	// List lists all StorageGatewayGatewayLoggings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.StorageGatewayGatewayLogging, err error)
	// Get retrieves the StorageGatewayGatewayLogging from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.StorageGatewayGatewayLogging, error)
	StorageGatewayGatewayLoggingNamespaceListerExpansion
}

// storageGatewayGatewayLoggingNamespaceLister implements the StorageGatewayGatewayLoggingNamespaceLister
// interface.
type storageGatewayGatewayLoggingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StorageGatewayGatewayLoggings in the indexer for a given namespace.
func (s storageGatewayGatewayLoggingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StorageGatewayGatewayLogging, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StorageGatewayGatewayLogging))
	})
	return ret, err
}

// Get retrieves the StorageGatewayGatewayLogging from the indexer for a given namespace and name.
func (s storageGatewayGatewayLoggingNamespaceLister) Get(name string) (*v1alpha1.StorageGatewayGatewayLogging, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("storagegatewaygatewaylogging"), name)
	}
	return obj.(*v1alpha1.StorageGatewayGatewayLogging), nil
}
