/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/cloud/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SsoAccessConfigurationProvisioningLister helps list SsoAccessConfigurationProvisionings.
// All objects returned here must be treated as read-only.
type SsoAccessConfigurationProvisioningLister interface {
	// List lists all SsoAccessConfigurationProvisionings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SsoAccessConfigurationProvisioning, err error)
	// SsoAccessConfigurationProvisionings returns an object that can list and get SsoAccessConfigurationProvisionings.
	SsoAccessConfigurationProvisionings(namespace string) SsoAccessConfigurationProvisioningNamespaceLister
	SsoAccessConfigurationProvisioningListerExpansion
}

// ssoAccessConfigurationProvisioningLister implements the SsoAccessConfigurationProvisioningLister interface.
type ssoAccessConfigurationProvisioningLister struct {
	indexer cache.Indexer
}

// NewSsoAccessConfigurationProvisioningLister returns a new SsoAccessConfigurationProvisioningLister.
func NewSsoAccessConfigurationProvisioningLister(indexer cache.Indexer) SsoAccessConfigurationProvisioningLister {
	return &ssoAccessConfigurationProvisioningLister{indexer: indexer}
}

// List lists all SsoAccessConfigurationProvisionings in the indexer.
func (s *ssoAccessConfigurationProvisioningLister) List(selector labels.Selector) (ret []*v1alpha1.SsoAccessConfigurationProvisioning, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsoAccessConfigurationProvisioning))
	})
	return ret, err
}

// SsoAccessConfigurationProvisionings returns an object that can list and get SsoAccessConfigurationProvisionings.
func (s *ssoAccessConfigurationProvisioningLister) SsoAccessConfigurationProvisionings(namespace string) SsoAccessConfigurationProvisioningNamespaceLister {
	return ssoAccessConfigurationProvisioningNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SsoAccessConfigurationProvisioningNamespaceLister helps list and get SsoAccessConfigurationProvisionings.
// All objects returned here must be treated as read-only.
type SsoAccessConfigurationProvisioningNamespaceLister interface {
	// List lists all SsoAccessConfigurationProvisionings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SsoAccessConfigurationProvisioning, err error)
	// Get retrieves the SsoAccessConfigurationProvisioning from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SsoAccessConfigurationProvisioning, error)
	SsoAccessConfigurationProvisioningNamespaceListerExpansion
}

// ssoAccessConfigurationProvisioningNamespaceLister implements the SsoAccessConfigurationProvisioningNamespaceLister
// interface.
type ssoAccessConfigurationProvisioningNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SsoAccessConfigurationProvisionings in the indexer for a given namespace.
func (s ssoAccessConfigurationProvisioningNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SsoAccessConfigurationProvisioning, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsoAccessConfigurationProvisioning))
	})
	return ret, err
}

// Get retrieves the SsoAccessConfigurationProvisioning from the indexer for a given namespace and name.
func (s ssoAccessConfigurationProvisioningNamespaceLister) Get(name string) (*v1alpha1.SsoAccessConfigurationProvisioning, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ssoaccessconfigurationprovisioning"), name)
	}
	return obj.(*v1alpha1.SsoAccessConfigurationProvisioning), nil
}
