/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/dts/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SubscriptionJobLister helps list SubscriptionJobs.
// All objects returned here must be treated as read-only.
type SubscriptionJobLister interface {
	// List lists all SubscriptionJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SubscriptionJob, err error)
	// SubscriptionJobs returns an object that can list and get SubscriptionJobs.
	SubscriptionJobs(namespace string) SubscriptionJobNamespaceLister
	SubscriptionJobListerExpansion
}

// subscriptionJobLister implements the SubscriptionJobLister interface.
type subscriptionJobLister struct {
	indexer cache.Indexer
}

// NewSubscriptionJobLister returns a new SubscriptionJobLister.
func NewSubscriptionJobLister(indexer cache.Indexer) SubscriptionJobLister {
	return &subscriptionJobLister{indexer: indexer}
}

// List lists all SubscriptionJobs in the indexer.
func (s *subscriptionJobLister) List(selector labels.Selector) (ret []*v1alpha1.SubscriptionJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SubscriptionJob))
	})
	return ret, err
}

// SubscriptionJobs returns an object that can list and get SubscriptionJobs.
func (s *subscriptionJobLister) SubscriptionJobs(namespace string) SubscriptionJobNamespaceLister {
	return subscriptionJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SubscriptionJobNamespaceLister helps list and get SubscriptionJobs.
// All objects returned here must be treated as read-only.
type SubscriptionJobNamespaceLister interface {
	// List lists all SubscriptionJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SubscriptionJob, err error)
	// Get retrieves the SubscriptionJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SubscriptionJob, error)
	SubscriptionJobNamespaceListerExpansion
}

// subscriptionJobNamespaceLister implements the SubscriptionJobNamespaceLister
// interface.
type subscriptionJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SubscriptionJobs in the indexer for a given namespace.
func (s subscriptionJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SubscriptionJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SubscriptionJob))
	})
	return ret, err
}

// Get retrieves the SubscriptionJob from the indexer for a given namespace and name.
func (s subscriptionJobNamespaceLister) Get(name string) (*v1alpha1.SubscriptionJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("subscriptionjob"), name)
	}
	return obj.(*v1alpha1.SubscriptionJob), nil
}
