/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/privatelink/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VpcEndpointServiceUserLister helps list VpcEndpointServiceUsers.
// All objects returned here must be treated as read-only.
type VpcEndpointServiceUserLister interface {
	// List lists all VpcEndpointServiceUsers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VpcEndpointServiceUser, err error)
	// VpcEndpointServiceUsers returns an object that can list and get VpcEndpointServiceUsers.
	VpcEndpointServiceUsers(namespace string) VpcEndpointServiceUserNamespaceLister
	VpcEndpointServiceUserListerExpansion
}

// vpcEndpointServiceUserLister implements the VpcEndpointServiceUserLister interface.
type vpcEndpointServiceUserLister struct {
	indexer cache.Indexer
}

// NewVpcEndpointServiceUserLister returns a new VpcEndpointServiceUserLister.
func NewVpcEndpointServiceUserLister(indexer cache.Indexer) VpcEndpointServiceUserLister {
	return &vpcEndpointServiceUserLister{indexer: indexer}
}

// List lists all VpcEndpointServiceUsers in the indexer.
func (s *vpcEndpointServiceUserLister) List(selector labels.Selector) (ret []*v1alpha1.VpcEndpointServiceUser, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpcEndpointServiceUser))
	})
	return ret, err
}

// VpcEndpointServiceUsers returns an object that can list and get VpcEndpointServiceUsers.
func (s *vpcEndpointServiceUserLister) VpcEndpointServiceUsers(namespace string) VpcEndpointServiceUserNamespaceLister {
	return vpcEndpointServiceUserNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VpcEndpointServiceUserNamespaceLister helps list and get VpcEndpointServiceUsers.
// All objects returned here must be treated as read-only.
type VpcEndpointServiceUserNamespaceLister interface {
	// List lists all VpcEndpointServiceUsers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VpcEndpointServiceUser, err error)
	// Get retrieves the VpcEndpointServiceUser from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VpcEndpointServiceUser, error)
	VpcEndpointServiceUserNamespaceListerExpansion
}

// vpcEndpointServiceUserNamespaceLister implements the VpcEndpointServiceUserNamespaceLister
// interface.
type vpcEndpointServiceUserNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VpcEndpointServiceUsers in the indexer for a given namespace.
func (s vpcEndpointServiceUserNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VpcEndpointServiceUser, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpcEndpointServiceUser))
	})
	return ret, err
}

// Get retrieves the VpcEndpointServiceUser from the indexer for a given namespace and name.
func (s vpcEndpointServiceUserNamespaceLister) Get(name string) (*v1alpha1.VpcEndpointServiceUser, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vpcendpointserviceuser"), name)
	}
	return obj.(*v1alpha1.VpcEndpointServiceUser), nil
}
