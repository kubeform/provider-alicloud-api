/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/alidns/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CustomLineLister helps list CustomLines.
// All objects returned here must be treated as read-only.
type CustomLineLister interface {
	// List lists all CustomLines in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomLine, err error)
	// CustomLines returns an object that can list and get CustomLines.
	CustomLines(namespace string) CustomLineNamespaceLister
	CustomLineListerExpansion
}

// customLineLister implements the CustomLineLister interface.
type customLineLister struct {
	indexer cache.Indexer
}

// NewCustomLineLister returns a new CustomLineLister.
func NewCustomLineLister(indexer cache.Indexer) CustomLineLister {
	return &customLineLister{indexer: indexer}
}

// List lists all CustomLines in the indexer.
func (s *customLineLister) List(selector labels.Selector) (ret []*v1alpha1.CustomLine, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomLine))
	})
	return ret, err
}

// CustomLines returns an object that can list and get CustomLines.
func (s *customLineLister) CustomLines(namespace string) CustomLineNamespaceLister {
	return customLineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomLineNamespaceLister helps list and get CustomLines.
// All objects returned here must be treated as read-only.
type CustomLineNamespaceLister interface {
	// List lists all CustomLines in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomLine, err error)
	// Get retrieves the CustomLine from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CustomLine, error)
	CustomLineNamespaceListerExpansion
}

// customLineNamespaceLister implements the CustomLineNamespaceLister
// interface.
type customLineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomLines in the indexer for a given namespace.
func (s customLineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomLine, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomLine))
	})
	return ret, err
}

// Get retrieves the CustomLine from the indexer for a given namespace and name.
func (s customLineNamespaceLister) Get(name string) (*v1alpha1.CustomLine, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("customline"), name)
	}
	return obj.(*v1alpha1.CustomLine), nil
}
