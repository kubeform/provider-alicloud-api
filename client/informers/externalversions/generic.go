/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package externalversions

import (
	"fmt"

	v1alpha1 "kubeform.dev/provider-alicloud-api/apis/actiontrail/v1alpha1"
	adbv1alpha1 "kubeform.dev/provider-alicloud-api/apis/adb/v1alpha1"
	alidnsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/alidns/v1alpha1"
	alikafkav1alpha1 "kubeform.dev/provider-alicloud-api/apis/alikafka/v1alpha1"
	amqpv1alpha1 "kubeform.dev/provider-alicloud-api/apis/amqp/v1alpha1"
	apigatewayv1alpha1 "kubeform.dev/provider-alicloud-api/apis/apigateway/v1alpha1"
	autov1alpha1 "kubeform.dev/provider-alicloud-api/apis/auto/v1alpha1"
	brainv1alpha1 "kubeform.dev/provider-alicloud-api/apis/brain/v1alpha1"
	casv1alpha1 "kubeform.dev/provider-alicloud-api/apis/cas/v1alpha1"
	cassandrav1alpha1 "kubeform.dev/provider-alicloud-api/apis/cassandra/v1alpha1"
	cdnv1alpha1 "kubeform.dev/provider-alicloud-api/apis/cdn/v1alpha1"
	cenv1alpha1 "kubeform.dev/provider-alicloud-api/apis/cen/v1alpha1"
	cloudv1alpha1 "kubeform.dev/provider-alicloud-api/apis/cloud/v1alpha1"
	cmsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/cms/v1alpha1"
	commonv1alpha1 "kubeform.dev/provider-alicloud-api/apis/common/v1alpha1"
	configv1alpha1 "kubeform.dev/provider-alicloud-api/apis/config/v1alpha1"
	containerv1alpha1 "kubeform.dev/provider-alicloud-api/apis/container/v1alpha1"
	copyv1alpha1 "kubeform.dev/provider-alicloud-api/apis/copy/v1alpha1"
	crv1alpha1 "kubeform.dev/provider-alicloud-api/apis/cr/v1alpha1"
	csv1alpha1 "kubeform.dev/provider-alicloud-api/apis/cs/v1alpha1"
	datahubv1alpha1 "kubeform.dev/provider-alicloud-api/apis/datahub/v1alpha1"
	dbv1alpha1 "kubeform.dev/provider-alicloud-api/apis/db/v1alpha1"
	dcdnv1alpha1 "kubeform.dev/provider-alicloud-api/apis/dcdn/v1alpha1"
	ddosbgpv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ddosbgp/v1alpha1"
	ddoscoov1alpha1 "kubeform.dev/provider-alicloud-api/apis/ddoscoo/v1alpha1"
	directv1alpha1 "kubeform.dev/provider-alicloud-api/apis/direct/v1alpha1"
	diskv1alpha1 "kubeform.dev/provider-alicloud-api/apis/disk/v1alpha1"
	dmsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/dms/v1alpha1"
	dnsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/dns/v1alpha1"
	drdsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/drds/v1alpha1"
	eciv1alpha1 "kubeform.dev/provider-alicloud-api/apis/eci/v1alpha1"
	ecsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ecs/v1alpha1"
	edasv1alpha1 "kubeform.dev/provider-alicloud-api/apis/edas/v1alpha1"
	eipv1alpha1 "kubeform.dev/provider-alicloud-api/apis/eip/v1alpha1"
	eipanycastv1alpha1 "kubeform.dev/provider-alicloud-api/apis/eipanycast/v1alpha1"
	elasticsearchv1alpha1 "kubeform.dev/provider-alicloud-api/apis/elasticsearch/v1alpha1"
	emrv1alpha1 "kubeform.dev/provider-alicloud-api/apis/emr/v1alpha1"
	essv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ess/v1alpha1"
	eventv1alpha1 "kubeform.dev/provider-alicloud-api/apis/event/v1alpha1"
	fcv1alpha1 "kubeform.dev/provider-alicloud-api/apis/fc/v1alpha1"
	fnfv1alpha1 "kubeform.dev/provider-alicloud-api/apis/fnf/v1alpha1"
	forwardv1alpha1 "kubeform.dev/provider-alicloud-api/apis/forward/v1alpha1"
	gav1alpha1 "kubeform.dev/provider-alicloud-api/apis/ga/v1alpha1"
	gpdbv1alpha1 "kubeform.dev/provider-alicloud-api/apis/gpdb/v1alpha1"
	havipv1alpha1 "kubeform.dev/provider-alicloud-api/apis/havip/v1alpha1"
	hbasev1alpha1 "kubeform.dev/provider-alicloud-api/apis/hbase/v1alpha1"
	imagev1alpha1 "kubeform.dev/provider-alicloud-api/apis/image/v1alpha1"
	instancev1alpha1 "kubeform.dev/provider-alicloud-api/apis/instance/v1alpha1"
	keyv1alpha1 "kubeform.dev/provider-alicloud-api/apis/key/v1alpha1"
	kmsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/kms/v1alpha1"
	kvstorev1alpha1 "kubeform.dev/provider-alicloud-api/apis/kvstore/v1alpha1"
	launchv1alpha1 "kubeform.dev/provider-alicloud-api/apis/launch/v1alpha1"
	logv1alpha1 "kubeform.dev/provider-alicloud-api/apis/log/v1alpha1"
	logtailv1alpha1 "kubeform.dev/provider-alicloud-api/apis/logtail/v1alpha1"
	marketv1alpha1 "kubeform.dev/provider-alicloud-api/apis/market/v1alpha1"
	maxcomputev1alpha1 "kubeform.dev/provider-alicloud-api/apis/maxcompute/v1alpha1"
	mnsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/mns/v1alpha1"
	mongodbv1alpha1 "kubeform.dev/provider-alicloud-api/apis/mongodb/v1alpha1"
	msev1alpha1 "kubeform.dev/provider-alicloud-api/apis/mse/v1alpha1"
	nasv1alpha1 "kubeform.dev/provider-alicloud-api/apis/nas/v1alpha1"
	natv1alpha1 "kubeform.dev/provider-alicloud-api/apis/nat/v1alpha1"
	networkv1alpha1 "kubeform.dev/provider-alicloud-api/apis/network/v1alpha1"
	onsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ons/v1alpha1"
	oosv1alpha1 "kubeform.dev/provider-alicloud-api/apis/oos/v1alpha1"
	ossv1alpha1 "kubeform.dev/provider-alicloud-api/apis/oss/v1alpha1"
	otsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ots/v1alpha1"
	polardbv1alpha1 "kubeform.dev/provider-alicloud-api/apis/polardb/v1alpha1"
	privatelinkv1alpha1 "kubeform.dev/provider-alicloud-api/apis/privatelink/v1alpha1"
	pvtzv1alpha1 "kubeform.dev/provider-alicloud-api/apis/pvtz/v1alpha1"
	quotasv1alpha1 "kubeform.dev/provider-alicloud-api/apis/quotas/v1alpha1"
	ramv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ram/v1alpha1"
	rdsv1alpha1 "kubeform.dev/provider-alicloud-api/apis/rds/v1alpha1"
	reservedv1alpha1 "kubeform.dev/provider-alicloud-api/apis/reserved/v1alpha1"
	resourcev1alpha1 "kubeform.dev/provider-alicloud-api/apis/resource/v1alpha1"
	rosv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ros/v1alpha1"
	routev1alpha1 "kubeform.dev/provider-alicloud-api/apis/route/v1alpha1"
	routerv1alpha1 "kubeform.dev/provider-alicloud-api/apis/router/v1alpha1"
	sagv1alpha1 "kubeform.dev/provider-alicloud-api/apis/sag/v1alpha1"
	securityv1alpha1 "kubeform.dev/provider-alicloud-api/apis/security/v1alpha1"
	slbv1alpha1 "kubeform.dev/provider-alicloud-api/apis/slb/v1alpha1"
	snapshotv1alpha1 "kubeform.dev/provider-alicloud-api/apis/snapshot/v1alpha1"
	snatv1alpha1 "kubeform.dev/provider-alicloud-api/apis/snat/v1alpha1"
	sslv1alpha1 "kubeform.dev/provider-alicloud-api/apis/ssl/v1alpha1"
	subnetv1alpha1 "kubeform.dev/provider-alicloud-api/apis/subnet/v1alpha1"
	tsdbv1alpha1 "kubeform.dev/provider-alicloud-api/apis/tsdb/v1alpha1"
	vpcv1alpha1 "kubeform.dev/provider-alicloud-api/apis/vpc/v1alpha1"
	vpnv1alpha1 "kubeform.dev/provider-alicloud-api/apis/vpn/v1alpha1"
	vswitchv1alpha1 "kubeform.dev/provider-alicloud-api/apis/vswitch/v1alpha1"
	wafv1alpha1 "kubeform.dev/provider-alicloud-api/apis/waf/v1alpha1"
	yundunv1alpha1 "kubeform.dev/provider-alicloud-api/apis/yundun/v1alpha1"

	schema "k8s.io/apimachinery/pkg/runtime/schema"
	cache "k8s.io/client-go/tools/cache"
)

// GenericInformer is type of SharedIndexInformer which will locate and delegate to other
// sharedInformers based on type
type GenericInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() cache.GenericLister
}

type genericInformer struct {
	informer cache.SharedIndexInformer
	resource schema.GroupResource
}

// Informer returns the SharedIndexInformer.
func (f *genericInformer) Informer() cache.SharedIndexInformer {
	return f.informer
}

// Lister returns the GenericLister.
func (f *genericInformer) Lister() cache.GenericLister {
	return cache.NewGenericLister(f.Informer().GetIndexer(), f.resource)
}

// ForResource gives generic access to a shared informer of the matching type
// TODO extend this to unknown resources with a client pool
func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {
	switch resource {
	// Group=actiontrail.alicloud.kubeform.com, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithResource("actiontrails"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Actiontrail().V1alpha1().Actiontrails().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("trails"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Actiontrail().V1alpha1().Trails().Informer()}, nil

		// Group=adb.alicloud.kubeform.com, Version=v1alpha1
	case adbv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Adb().V1alpha1().Accounts().Informer()}, nil
	case adbv1alpha1.SchemeGroupVersion.WithResource("backuppolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Adb().V1alpha1().BackupPolicies().Informer()}, nil
	case adbv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Adb().V1alpha1().Clusters().Informer()}, nil
	case adbv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Adb().V1alpha1().Connections().Informer()}, nil
	case adbv1alpha1.SchemeGroupVersion.WithResource("dbclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Adb().V1alpha1().DbClusters().Informer()}, nil

		// Group=alidns.alicloud.kubeform.com, Version=v1alpha1
	case alidnsv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alidns().V1alpha1().Domains().Informer()}, nil
	case alidnsv1alpha1.SchemeGroupVersion.WithResource("domainattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alidns().V1alpha1().DomainAttachments().Informer()}, nil
	case alidnsv1alpha1.SchemeGroupVersion.WithResource("domaingroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alidns().V1alpha1().DomainGroups().Informer()}, nil
	case alidnsv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alidns().V1alpha1().Instances().Informer()}, nil
	case alidnsv1alpha1.SchemeGroupVersion.WithResource("records"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alidns().V1alpha1().Records().Informer()}, nil

		// Group=alikafka.alicloud.kubeform.com, Version=v1alpha1
	case alikafkav1alpha1.SchemeGroupVersion.WithResource("consumergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alikafka().V1alpha1().ConsumerGroups().Informer()}, nil
	case alikafkav1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alikafka().V1alpha1().Instances().Informer()}, nil
	case alikafkav1alpha1.SchemeGroupVersion.WithResource("saslacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alikafka().V1alpha1().SaslACLs().Informer()}, nil
	case alikafkav1alpha1.SchemeGroupVersion.WithResource("saslusers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alikafka().V1alpha1().SaslUsers().Informer()}, nil
	case alikafkav1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Alikafka().V1alpha1().Topics().Informer()}, nil

		// Group=amqp.alicloud.kubeform.com, Version=v1alpha1
	case amqpv1alpha1.SchemeGroupVersion.WithResource("exchanges"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amqp().V1alpha1().Exchanges().Informer()}, nil
	case amqpv1alpha1.SchemeGroupVersion.WithResource("queues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amqp().V1alpha1().Queues().Informer()}, nil
	case amqpv1alpha1.SchemeGroupVersion.WithResource("virtualhosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Amqp().V1alpha1().VirtualHosts().Informer()}, nil

		// Group=apigateway.alicloud.kubeform.com, Version=v1alpha1
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("apis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Apis().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("apps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Apps().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("appattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().AppAttachments().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().Groups().Informer()}, nil
	case apigatewayv1alpha1.SchemeGroupVersion.WithResource("vpcaccesses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigateway().V1alpha1().VpcAccesses().Informer()}, nil

		// Group=auto.alicloud.kubeform.com, Version=v1alpha1
	case autov1alpha1.SchemeGroupVersion.WithResource("provisioninggroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Auto().V1alpha1().ProvisioningGroups().Informer()}, nil

		// Group=brain.alicloud.kubeform.com, Version=v1alpha1
	case brainv1alpha1.SchemeGroupVersion.WithResource("industrialpidloops"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Brain().V1alpha1().IndustrialPidLoops().Informer()}, nil
	case brainv1alpha1.SchemeGroupVersion.WithResource("industrialpidorganizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Brain().V1alpha1().IndustrialPidOrganizations().Informer()}, nil
	case brainv1alpha1.SchemeGroupVersion.WithResource("industrialpidprojects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Brain().V1alpha1().IndustrialPidProjects().Informer()}, nil

		// Group=cas.alicloud.kubeform.com, Version=v1alpha1
	case casv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cas().V1alpha1().Certificates().Informer()}, nil

		// Group=cassandra.alicloud.kubeform.com, Version=v1alpha1
	case cassandrav1alpha1.SchemeGroupVersion.WithResource("backupplans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cassandra().V1alpha1().BackupPlans().Informer()}, nil
	case cassandrav1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cassandra().V1alpha1().Clusters().Informer()}, nil
	case cassandrav1alpha1.SchemeGroupVersion.WithResource("datacenters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cassandra().V1alpha1().DataCenters().Informer()}, nil

		// Group=cdn.alicloud.kubeform.com, Version=v1alpha1
	case cdnv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cdn().V1alpha1().Domains().Informer()}, nil
	case cdnv1alpha1.SchemeGroupVersion.WithResource("domainconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cdn().V1alpha1().DomainConfigs().Informer()}, nil
	case cdnv1alpha1.SchemeGroupVersion.WithResource("domainnews"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cdn().V1alpha1().DomainNews().Informer()}, nil

		// Group=cen.alicloud.kubeform.com, Version=v1alpha1
	case cenv1alpha1.SchemeGroupVersion.WithResource("bandwidthlimits"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().BandwidthLimits().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("bandwidthpackages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().BandwidthPackages().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("bandwidthpackageattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().BandwidthPackageAttachments().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("flowlogs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().Flowlogs().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().Instances().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("instanceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().InstanceAttachments().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("instancegrants"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().InstanceGrants().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("privatezones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().PrivateZones().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("routeentries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().RouteEntries().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("routemaps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().RouteMaps().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("routeservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().RouteServices().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitrouters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouters().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitrouterpeerattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouterPeerAttachments().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitrouterrouteentries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouterRouteEntries().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitrouterroutetables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouterRouteTables().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitrouterroutetableassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouterRouteTableAssociations().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitrouterroutetablepropagations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouterRouteTablePropagations().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitroutervbrattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouterVbrAttachments().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("transitroutervpcattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().TransitRouterVpcAttachments().Informer()}, nil
	case cenv1alpha1.SchemeGroupVersion.WithResource("vbrhealthchecks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cen().V1alpha1().VbrHealthChecks().Informer()}, nil

		// Group=cloud.alicloud.kubeform.com, Version=v1alpha1
	case cloudv1alpha1.SchemeGroupVersion.WithResource("connectnetworks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().ConnectNetworks().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("connectnetworkattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().ConnectNetworkAttachments().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("connectnetworkgrants"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().ConnectNetworkGrants().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("storagegatewaystoragebundles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().StorageGatewayStorageBundles().Informer()}, nil

		// Group=cms.alicloud.kubeform.com, Version=v1alpha1
	case cmsv1alpha1.SchemeGroupVersion.WithResource("alarms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cms().V1alpha1().Alarms().Informer()}, nil
	case cmsv1alpha1.SchemeGroupVersion.WithResource("alarmcontacts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cms().V1alpha1().AlarmContacts().Informer()}, nil
	case cmsv1alpha1.SchemeGroupVersion.WithResource("alarmcontactgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cms().V1alpha1().AlarmContactGroups().Informer()}, nil
	case cmsv1alpha1.SchemeGroupVersion.WithResource("groupmetricrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cms().V1alpha1().GroupMetricRules().Informer()}, nil
	case cmsv1alpha1.SchemeGroupVersion.WithResource("monitorgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cms().V1alpha1().MonitorGroups().Informer()}, nil
	case cmsv1alpha1.SchemeGroupVersion.WithResource("monitorgroupinstanceses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cms().V1alpha1().MonitorGroupInstanceses().Informer()}, nil
	case cmsv1alpha1.SchemeGroupVersion.WithResource("sitemonitors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cms().V1alpha1().SiteMonitors().Informer()}, nil

		// Group=common.alicloud.kubeform.com, Version=v1alpha1
	case commonv1alpha1.SchemeGroupVersion.WithResource("bandwidthpackages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Common().V1alpha1().BandwidthPackages().Informer()}, nil
	case commonv1alpha1.SchemeGroupVersion.WithResource("bandwidthpackageattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Common().V1alpha1().BandwidthPackageAttachments().Informer()}, nil

		// Group=config.alicloud.kubeform.com, Version=v1alpha1
	case configv1alpha1.SchemeGroupVersion.WithResource("aggregatecompliancepacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().AggregateCompliancePacks().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("aggregateconfigrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().AggregateConfigRules().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("aggregators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().Aggregators().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("compliancepacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().CompliancePacks().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("configurationrecorders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().ConfigurationRecorders().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("deliverychannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().DeliveryChannels().Informer()}, nil
	case configv1alpha1.SchemeGroupVersion.WithResource("rules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Config().V1alpha1().Rules().Informer()}, nil

		// Group=container.alicloud.kubeform.com, Version=v1alpha1
	case containerv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Clusters().Informer()}, nil

		// Group=copy.alicloud.kubeform.com, Version=v1alpha1
	case copyv1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Copy().V1alpha1().Images().Informer()}, nil

		// Group=cr.alicloud.kubeform.com, Version=v1alpha1
	case crv1alpha1.SchemeGroupVersion.WithResource("eeinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().EeInstances().Informer()}, nil
	case crv1alpha1.SchemeGroupVersion.WithResource("eenamespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().EeNamespaces().Informer()}, nil
	case crv1alpha1.SchemeGroupVersion.WithResource("eerepos"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().EeRepos().Informer()}, nil
	case crv1alpha1.SchemeGroupVersion.WithResource("eesyncrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().EeSyncRules().Informer()}, nil
	case crv1alpha1.SchemeGroupVersion.WithResource("namespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().Namespaces().Informer()}, nil
	case crv1alpha1.SchemeGroupVersion.WithResource("repos"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().Repos().Informer()}, nil

		// Group=cs.alicloud.kubeform.com, Version=v1alpha1
	case csv1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().Applications().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("autoscalingconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().AutoscalingConfigs().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("edgekuberneteses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().EdgeKuberneteses().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("kuberneteses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().Kuberneteses().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("kubernetesautoscalers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().KubernetesAutoscalers().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("kubernetesnodepools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().KubernetesNodePools().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("kubernetespermissionses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().KubernetesPermissionses().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("managedkuberneteses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().ManagedKuberneteses().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("serverlesskuberneteses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().ServerlessKuberneteses().Informer()}, nil
	case csv1alpha1.SchemeGroupVersion.WithResource("swarms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cs().V1alpha1().Swarms().Informer()}, nil

		// Group=datahub.alicloud.kubeform.com, Version=v1alpha1
	case datahubv1alpha1.SchemeGroupVersion.WithResource("projects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datahub().V1alpha1().Projects().Informer()}, nil
	case datahubv1alpha1.SchemeGroupVersion.WithResource("subscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datahub().V1alpha1().Subscriptions().Informer()}, nil
	case datahubv1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datahub().V1alpha1().Topics().Informer()}, nil

		// Group=db.alicloud.kubeform.com, Version=v1alpha1
	case dbv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().Accounts().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("accountprivileges"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().AccountPrivileges().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("backuppolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().BackupPolicies().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().Connections().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().Databases().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().Instances().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("readwritesplittingconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().ReadWriteSplittingConnections().Informer()}, nil
	case dbv1alpha1.SchemeGroupVersion.WithResource("readonlyinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Db().V1alpha1().ReadonlyInstances().Informer()}, nil

		// Group=dcdn.alicloud.kubeform.com, Version=v1alpha1
	case dcdnv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dcdn().V1alpha1().Domains().Informer()}, nil

		// Group=ddosbgp.alicloud.kubeform.com, Version=v1alpha1
	case ddosbgpv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ddosbgp().V1alpha1().Instances().Informer()}, nil

		// Group=ddoscoo.alicloud.kubeform.com, Version=v1alpha1
	case ddoscoov1alpha1.SchemeGroupVersion.WithResource("domainresources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ddoscoo().V1alpha1().DomainResources().Informer()}, nil
	case ddoscoov1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ddoscoo().V1alpha1().Instances().Informer()}, nil
	case ddoscoov1alpha1.SchemeGroupVersion.WithResource("ports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ddoscoo().V1alpha1().Ports().Informer()}, nil
	case ddoscoov1alpha1.SchemeGroupVersion.WithResource("schedulerrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ddoscoo().V1alpha1().SchedulerRules().Informer()}, nil

		// Group=direct.alicloud.kubeform.com, Version=v1alpha1
	case directv1alpha1.SchemeGroupVersion.WithResource("mailreceiverses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Direct().V1alpha1().MailReceiverses().Informer()}, nil

		// Group=disk.alicloud.kubeform.com, Version=v1alpha1
	case diskv1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().Attachments().Informer()}, nil
	case diskv1alpha1.SchemeGroupVersion.WithResource("disks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().Disks().Informer()}, nil

		// Group=dms.alicloud.kubeform.com, Version=v1alpha1
	case dmsv1alpha1.SchemeGroupVersion.WithResource("enterpriseinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().EnterpriseInstances().Informer()}, nil
	case dmsv1alpha1.SchemeGroupVersion.WithResource("enterpriseusers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dms().V1alpha1().EnterpriseUsers().Informer()}, nil

		// Group=dns.alicloud.kubeform.com, Version=v1alpha1
	case dnsv1alpha1.SchemeGroupVersion.WithResource("dnses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Dnses().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Domains().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("domainattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().DomainAttachments().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Groups().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Instances().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("records"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Records().Informer()}, nil

		// Group=drds.alicloud.kubeform.com, Version=v1alpha1
	case drdsv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Drds().V1alpha1().Instances().Informer()}, nil

		// Group=eci.alicloud.kubeform.com, Version=v1alpha1
	case eciv1alpha1.SchemeGroupVersion.WithResource("containergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eci().V1alpha1().ContainerGroups().Informer()}, nil
	case eciv1alpha1.SchemeGroupVersion.WithResource("imagecaches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eci().V1alpha1().ImageCaches().Informer()}, nil
	case eciv1alpha1.SchemeGroupVersion.WithResource("openapiimagecaches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eci().V1alpha1().OpenapiImageCaches().Informer()}, nil

		// Group=ecs.alicloud.kubeform.com, Version=v1alpha1
	case ecsv1alpha1.SchemeGroupVersion.WithResource("autosnapshotpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().AutoSnapshotPolicies().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("autosnapshotpolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().AutoSnapshotPolicyAttachments().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("commands"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().Commands().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("dedicatedhosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().DedicatedHosts().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("disks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().Disks().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("diskattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().DiskAttachments().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("hpcclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().HpcClusters().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("keypairs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().KeyPairs().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("keypairattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().KeyPairAttachments().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("launchtemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().LaunchTemplates().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("networkinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().NetworkInterfaces().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("networkinterfaceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().NetworkInterfaceAttachments().Informer()}, nil
	case ecsv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ecs().V1alpha1().Snapshots().Informer()}, nil

		// Group=edas.alicloud.kubeform.com, Version=v1alpha1
	case edasv1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().Applications().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("applicationdeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().ApplicationDeployments().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("applicationscales"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().ApplicationScales().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().Clusters().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("deploygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().DeployGroups().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("instanceclusterattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().InstanceClusterAttachments().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("k8sapplications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().K8sApplications().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("k8sclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().K8sClusters().Informer()}, nil
	case edasv1alpha1.SchemeGroupVersion.WithResource("slbattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Edas().V1alpha1().SlbAttachments().Informer()}, nil

		// Group=eip.alicloud.kubeform.com, Version=v1alpha1
	case eipv1alpha1.SchemeGroupVersion.WithResource("addresses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eip().V1alpha1().Addresses().Informer()}, nil
	case eipv1alpha1.SchemeGroupVersion.WithResource("associations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eip().V1alpha1().Associations().Informer()}, nil
	case eipv1alpha1.SchemeGroupVersion.WithResource("eips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eip().V1alpha1().Eips().Informer()}, nil

		// Group=eipanycast.alicloud.kubeform.com, Version=v1alpha1
	case eipanycastv1alpha1.SchemeGroupVersion.WithResource("anycasteipaddresses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eipanycast().V1alpha1().AnycastEipAddresses().Informer()}, nil
	case eipanycastv1alpha1.SchemeGroupVersion.WithResource("anycasteipaddressattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eipanycast().V1alpha1().AnycastEipAddressAttachments().Informer()}, nil

		// Group=elasticsearch.alicloud.kubeform.com, Version=v1alpha1
	case elasticsearchv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Elasticsearch().V1alpha1().Instances().Informer()}, nil

		// Group=emr.alicloud.kubeform.com, Version=v1alpha1
	case emrv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Emr().V1alpha1().Clusters().Informer()}, nil

		// Group=ess.alicloud.kubeform.com, Version=v1alpha1
	case essv1alpha1.SchemeGroupVersion.WithResource("alarms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().Alarms().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().Attachments().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("lifecyclehooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().LifecycleHooks().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("notifications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().Notifications().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("scalingconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().ScalingConfigurations().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("scalinggroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().ScalingGroups().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("scalingrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().ScalingRules().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("scalinggroupvservergroupses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().ScalinggroupVserverGroupses().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("schedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().Schedules().Informer()}, nil
	case essv1alpha1.SchemeGroupVersion.WithResource("scheduledtasks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ess().V1alpha1().ScheduledTasks().Informer()}, nil

		// Group=event.alicloud.kubeform.com, Version=v1alpha1
	case eventv1alpha1.SchemeGroupVersion.WithResource("bridgeeventbuses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Event().V1alpha1().BridgeEventBuses().Informer()}, nil
	case eventv1alpha1.SchemeGroupVersion.WithResource("bridgeschemagroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Event().V1alpha1().BridgeSchemaGroups().Informer()}, nil

		// Group=fc.alicloud.kubeform.com, Version=v1alpha1
	case fcv1alpha1.SchemeGroupVersion.WithResource("aliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fc().V1alpha1().Aliases().Informer()}, nil
	case fcv1alpha1.SchemeGroupVersion.WithResource("customdomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fc().V1alpha1().CustomDomains().Informer()}, nil
	case fcv1alpha1.SchemeGroupVersion.WithResource("functions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fc().V1alpha1().Functions().Informer()}, nil
	case fcv1alpha1.SchemeGroupVersion.WithResource("functionasyncinvokeconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fc().V1alpha1().FunctionAsyncInvokeConfigs().Informer()}, nil
	case fcv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fc().V1alpha1().Services().Informer()}, nil
	case fcv1alpha1.SchemeGroupVersion.WithResource("triggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fc().V1alpha1().Triggers().Informer()}, nil

		// Group=fnf.alicloud.kubeform.com, Version=v1alpha1
	case fnfv1alpha1.SchemeGroupVersion.WithResource("flows"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fnf().V1alpha1().Flows().Informer()}, nil
	case fnfv1alpha1.SchemeGroupVersion.WithResource("schedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Fnf().V1alpha1().Schedules().Informer()}, nil

		// Group=forward.alicloud.kubeform.com, Version=v1alpha1
	case forwardv1alpha1.SchemeGroupVersion.WithResource("entries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Forward().V1alpha1().Entries().Informer()}, nil

		// Group=ga.alicloud.kubeform.com, Version=v1alpha1
	case gav1alpha1.SchemeGroupVersion.WithResource("accelerators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ga().V1alpha1().Accelerators().Informer()}, nil
	case gav1alpha1.SchemeGroupVersion.WithResource("bandwidthpackages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ga().V1alpha1().BandwidthPackages().Informer()}, nil
	case gav1alpha1.SchemeGroupVersion.WithResource("bandwidthpackageattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ga().V1alpha1().BandwidthPackageAttachments().Informer()}, nil
	case gav1alpha1.SchemeGroupVersion.WithResource("endpointgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ga().V1alpha1().EndpointGroups().Informer()}, nil
	case gav1alpha1.SchemeGroupVersion.WithResource("forwardingrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ga().V1alpha1().ForwardingRules().Informer()}, nil
	case gav1alpha1.SchemeGroupVersion.WithResource("ipsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ga().V1alpha1().IpSets().Informer()}, nil
	case gav1alpha1.SchemeGroupVersion.WithResource("listeners"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ga().V1alpha1().Listeners().Informer()}, nil

		// Group=gpdb.alicloud.kubeform.com, Version=v1alpha1
	case gpdbv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Gpdb().V1alpha1().Connections().Informer()}, nil
	case gpdbv1alpha1.SchemeGroupVersion.WithResource("elasticinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Gpdb().V1alpha1().ElasticInstances().Informer()}, nil
	case gpdbv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Gpdb().V1alpha1().Instances().Informer()}, nil

		// Group=havip.alicloud.kubeform.com, Version=v1alpha1
	case havipv1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Havip().V1alpha1().Attachments().Informer()}, nil
	case havipv1alpha1.SchemeGroupVersion.WithResource("havips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Havip().V1alpha1().Havips().Informer()}, nil

		// Group=hbase.alicloud.kubeform.com, Version=v1alpha1
	case hbasev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hbase().V1alpha1().Instances().Informer()}, nil

		// Group=image.alicloud.kubeform.com, Version=v1alpha1
	case imagev1alpha1.SchemeGroupVersion.WithResource("copies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Image().V1alpha1().Copies().Informer()}, nil
	case imagev1alpha1.SchemeGroupVersion.WithResource("exports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Image().V1alpha1().Exports().Informer()}, nil
	case imagev1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Image().V1alpha1().Images().Informer()}, nil
	case imagev1alpha1.SchemeGroupVersion.WithResource("imports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Image().V1alpha1().Imports().Informer()}, nil
	case imagev1alpha1.SchemeGroupVersion.WithResource("sharepermissions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Image().V1alpha1().SharePermissions().Informer()}, nil

		// Group=instance.alicloud.kubeform.com, Version=v1alpha1
	case instancev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Instance().V1alpha1().Instances().Informer()}, nil

		// Group=key.alicloud.kubeform.com, Version=v1alpha1
	case keyv1alpha1.SchemeGroupVersion.WithResource("pairs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Key().V1alpha1().Pairs().Informer()}, nil
	case keyv1alpha1.SchemeGroupVersion.WithResource("pairattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Key().V1alpha1().PairAttachments().Informer()}, nil

		// Group=kms.alicloud.kubeform.com, Version=v1alpha1
	case kmsv1alpha1.SchemeGroupVersion.WithResource("aliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Aliases().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("ciphertexts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Ciphertexts().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Keys().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyVersions().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("secrets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Secrets().Informer()}, nil

		// Group=kvstore.alicloud.kubeform.com, Version=v1alpha1
	case kvstorev1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kvstore().V1alpha1().Accounts().Informer()}, nil
	case kvstorev1alpha1.SchemeGroupVersion.WithResource("backuppolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kvstore().V1alpha1().BackupPolicies().Informer()}, nil
	case kvstorev1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kvstore().V1alpha1().Connections().Informer()}, nil
	case kvstorev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kvstore().V1alpha1().Instances().Informer()}, nil

		// Group=launch.alicloud.kubeform.com, Version=v1alpha1
	case launchv1alpha1.SchemeGroupVersion.WithResource("templates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Launch().V1alpha1().Templates().Informer()}, nil

		// Group=log.alicloud.kubeform.com, Version=v1alpha1
	case logv1alpha1.SchemeGroupVersion.WithResource("alerts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().Alerts().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("audits"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().Audits().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("dashboards"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().Dashboards().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("etls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().Etls().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("machinegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().MachineGroups().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("ossshippers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().OssShippers().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("projects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().Projects().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("stores"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().Stores().Informer()}, nil
	case logv1alpha1.SchemeGroupVersion.WithResource("storeindexes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Log().V1alpha1().StoreIndexes().Informer()}, nil

		// Group=logtail.alicloud.kubeform.com, Version=v1alpha1
	case logtailv1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logtail().V1alpha1().Attachments().Informer()}, nil
	case logtailv1alpha1.SchemeGroupVersion.WithResource("configs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logtail().V1alpha1().Configs().Informer()}, nil

		// Group=market.alicloud.kubeform.com, Version=v1alpha1
	case marketv1alpha1.SchemeGroupVersion.WithResource("orders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Market().V1alpha1().Orders().Informer()}, nil

		// Group=maxcompute.alicloud.kubeform.com, Version=v1alpha1
	case maxcomputev1alpha1.SchemeGroupVersion.WithResource("projects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Maxcompute().V1alpha1().Projects().Informer()}, nil

		// Group=mns.alicloud.kubeform.com, Version=v1alpha1
	case mnsv1alpha1.SchemeGroupVersion.WithResource("queues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mns().V1alpha1().Queues().Informer()}, nil
	case mnsv1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mns().V1alpha1().Topics().Informer()}, nil
	case mnsv1alpha1.SchemeGroupVersion.WithResource("topicsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mns().V1alpha1().TopicSubscriptions().Informer()}, nil

		// Group=mongodb.alicloud.kubeform.com, Version=v1alpha1
	case mongodbv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mongodb().V1alpha1().Instances().Informer()}, nil
	case mongodbv1alpha1.SchemeGroupVersion.WithResource("shardinginstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mongodb().V1alpha1().ShardingInstances().Informer()}, nil

		// Group=mse.alicloud.kubeform.com, Version=v1alpha1
	case msev1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mse().V1alpha1().Clusters().Informer()}, nil

		// Group=nas.alicloud.kubeform.com, Version=v1alpha1
	case nasv1alpha1.SchemeGroupVersion.WithResource("accessgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nas().V1alpha1().AccessGroups().Informer()}, nil
	case nasv1alpha1.SchemeGroupVersion.WithResource("accessrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nas().V1alpha1().AccessRules().Informer()}, nil
	case nasv1alpha1.SchemeGroupVersion.WithResource("filesystems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nas().V1alpha1().FileSystems().Informer()}, nil
	case nasv1alpha1.SchemeGroupVersion.WithResource("mounttargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nas().V1alpha1().MountTargets().Informer()}, nil

		// Group=nat.alicloud.kubeform.com, Version=v1alpha1
	case natv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nat().V1alpha1().Gateways().Informer()}, nil

		// Group=network.alicloud.kubeform.com, Version=v1alpha1
	case networkv1alpha1.SchemeGroupVersion.WithResource("acls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Acls().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("aclattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().AclAttachments().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("aclentrieses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().AclEntrieses().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Interfaces().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfaceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceAttachments().Informer()}, nil

		// Group=ons.alicloud.kubeform.com, Version=v1alpha1
	case onsv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ons().V1alpha1().Groups().Informer()}, nil
	case onsv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ons().V1alpha1().Instances().Informer()}, nil
	case onsv1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ons().V1alpha1().Topics().Informer()}, nil

		// Group=oos.alicloud.kubeform.com, Version=v1alpha1
	case oosv1alpha1.SchemeGroupVersion.WithResource("executions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Oos().V1alpha1().Executions().Informer()}, nil
	case oosv1alpha1.SchemeGroupVersion.WithResource("templates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Oos().V1alpha1().Templates().Informer()}, nil

		// Group=oss.alicloud.kubeform.com, Version=v1alpha1
	case ossv1alpha1.SchemeGroupVersion.WithResource("buckets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Oss().V1alpha1().Buckets().Informer()}, nil
	case ossv1alpha1.SchemeGroupVersion.WithResource("bucketobjects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Oss().V1alpha1().BucketObjects().Informer()}, nil

		// Group=ots.alicloud.kubeform.com, Version=v1alpha1
	case otsv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ots().V1alpha1().Instances().Informer()}, nil
	case otsv1alpha1.SchemeGroupVersion.WithResource("instanceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ots().V1alpha1().InstanceAttachments().Informer()}, nil
	case otsv1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ots().V1alpha1().Tables().Informer()}, nil

		// Group=polardb.alicloud.kubeform.com, Version=v1alpha1
	case polardbv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Polardb().V1alpha1().Accounts().Informer()}, nil
	case polardbv1alpha1.SchemeGroupVersion.WithResource("accountprivileges"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Polardb().V1alpha1().AccountPrivileges().Informer()}, nil
	case polardbv1alpha1.SchemeGroupVersion.WithResource("backuppolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Polardb().V1alpha1().BackupPolicies().Informer()}, nil
	case polardbv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Polardb().V1alpha1().Clusters().Informer()}, nil
	case polardbv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Polardb().V1alpha1().Databases().Informer()}, nil
	case polardbv1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Polardb().V1alpha1().Endpoints().Informer()}, nil
	case polardbv1alpha1.SchemeGroupVersion.WithResource("endpointaddresses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Polardb().V1alpha1().EndpointAddresses().Informer()}, nil

		// Group=privatelink.alicloud.kubeform.com, Version=v1alpha1
	case privatelinkv1alpha1.SchemeGroupVersion.WithResource("vpcendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Privatelink().V1alpha1().VpcEndpoints().Informer()}, nil
	case privatelinkv1alpha1.SchemeGroupVersion.WithResource("vpcendpointconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Privatelink().V1alpha1().VpcEndpointConnections().Informer()}, nil
	case privatelinkv1alpha1.SchemeGroupVersion.WithResource("vpcendpointservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Privatelink().V1alpha1().VpcEndpointServices().Informer()}, nil
	case privatelinkv1alpha1.SchemeGroupVersion.WithResource("vpcendpointserviceresources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Privatelink().V1alpha1().VpcEndpointServiceResources().Informer()}, nil
	case privatelinkv1alpha1.SchemeGroupVersion.WithResource("vpcendpointserviceusers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Privatelink().V1alpha1().VpcEndpointServiceUsers().Informer()}, nil
	case privatelinkv1alpha1.SchemeGroupVersion.WithResource("vpcendpointzones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Privatelink().V1alpha1().VpcEndpointZones().Informer()}, nil

		// Group=pvtz.alicloud.kubeform.com, Version=v1alpha1
	case pvtzv1alpha1.SchemeGroupVersion.WithResource("zones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pvtz().V1alpha1().Zones().Informer()}, nil
	case pvtzv1alpha1.SchemeGroupVersion.WithResource("zoneattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pvtz().V1alpha1().ZoneAttachments().Informer()}, nil
	case pvtzv1alpha1.SchemeGroupVersion.WithResource("zonerecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pvtz().V1alpha1().ZoneRecords().Informer()}, nil

		// Group=quotas.alicloud.kubeform.com, Version=v1alpha1
	case quotasv1alpha1.SchemeGroupVersion.WithResource("applicationinfos"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Quotas().V1alpha1().ApplicationInfos().Informer()}, nil
	case quotasv1alpha1.SchemeGroupVersion.WithResource("quotaalarms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Quotas().V1alpha1().QuotaAlarms().Informer()}, nil
	case quotasv1alpha1.SchemeGroupVersion.WithResource("quotaapplications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Quotas().V1alpha1().QuotaApplications().Informer()}, nil

		// Group=ram.alicloud.kubeform.com, Version=v1alpha1
	case ramv1alpha1.SchemeGroupVersion.WithResource("accesskeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().AccessKeys().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("accountaliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().AccountAliases().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("accountpasswordpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().AccountPasswordPolicies().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("aliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().Aliases().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().Groups().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("groupmemberships"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().GroupMemberships().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("grouppolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().GroupPolicyAttachments().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("loginprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().LoginProfiles().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().Policies().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("roles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().Roles().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("roleattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().RoleAttachments().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("rolepolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().RolePolicyAttachments().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("samlproviders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().SamlProviders().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("users"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().Users().Informer()}, nil
	case ramv1alpha1.SchemeGroupVersion.WithResource("userpolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ram().V1alpha1().UserPolicyAttachments().Informer()}, nil

		// Group=rds.alicloud.kubeform.com, Version=v1alpha1
	case rdsv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Rds().V1alpha1().Accounts().Informer()}, nil
	case rdsv1alpha1.SchemeGroupVersion.WithResource("parametergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Rds().V1alpha1().ParameterGroups().Informer()}, nil

		// Group=reserved.alicloud.kubeform.com, Version=v1alpha1
	case reservedv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Reserved().V1alpha1().Instances().Informer()}, nil

		// Group=resource.alicloud.kubeform.com, Version=v1alpha1
	case resourcev1alpha1.SchemeGroupVersion.WithResource("manageraccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerAccounts().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managercontrolpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerControlPolicies().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managercontrolpolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerControlPolicyAttachments().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerfolders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerFolders().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerhandshakes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerHandshakes().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerPolicies().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerpolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerPolicyAttachments().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerpolicyversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerPolicyVersions().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerresourcedirectories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerResourceDirectories().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerresourcegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerResourceGroups().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerresourceshares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerResourceShares().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerroles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerRoles().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managersharedresources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerSharedResources().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managersharedtargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerSharedTargets().Informer()}, nil

		// Group=ros.alicloud.kubeform.com, Version=v1alpha1
	case rosv1alpha1.SchemeGroupVersion.WithResource("changesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ros().V1alpha1().ChangeSets().Informer()}, nil
	case rosv1alpha1.SchemeGroupVersion.WithResource("stacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ros().V1alpha1().Stacks().Informer()}, nil
	case rosv1alpha1.SchemeGroupVersion.WithResource("stackgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ros().V1alpha1().StackGroups().Informer()}, nil
	case rosv1alpha1.SchemeGroupVersion.WithResource("templates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ros().V1alpha1().Templates().Informer()}, nil

		// Group=route.alicloud.kubeform.com, Version=v1alpha1
	case routev1alpha1.SchemeGroupVersion.WithResource("entries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().Entries().Informer()}, nil
	case routev1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().Tables().Informer()}, nil
	case routev1alpha1.SchemeGroupVersion.WithResource("tableattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().TableAttachments().Informer()}, nil

		// Group=router.alicloud.kubeform.com, Version=v1alpha1
	case routerv1alpha1.SchemeGroupVersion.WithResource("interfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Router().V1alpha1().Interfaces().Informer()}, nil
	case routerv1alpha1.SchemeGroupVersion.WithResource("interfaceconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Router().V1alpha1().InterfaceConnections().Informer()}, nil

		// Group=sag.alicloud.kubeform.com, Version=v1alpha1
	case sagv1alpha1.SchemeGroupVersion.WithResource("acls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().Acls().Informer()}, nil
	case sagv1alpha1.SchemeGroupVersion.WithResource("aclrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().AclRules().Informer()}, nil
	case sagv1alpha1.SchemeGroupVersion.WithResource("clientusers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().ClientUsers().Informer()}, nil
	case sagv1alpha1.SchemeGroupVersion.WithResource("dnatentries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().DnatEntries().Informer()}, nil
	case sagv1alpha1.SchemeGroupVersion.WithResource("qoses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().Qoses().Informer()}, nil
	case sagv1alpha1.SchemeGroupVersion.WithResource("qoscars"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().QosCars().Informer()}, nil
	case sagv1alpha1.SchemeGroupVersion.WithResource("qospolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().QosPolicies().Informer()}, nil
	case sagv1alpha1.SchemeGroupVersion.WithResource("snatentries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sag().V1alpha1().SnatEntries().Informer()}, nil

		// Group=security.alicloud.kubeform.com, Version=v1alpha1
	case securityv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().Groups().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("grouprules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().GroupRules().Informer()}, nil

		// Group=slb.alicloud.kubeform.com, Version=v1alpha1
	case slbv1alpha1.SchemeGroupVersion.WithResource("acls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().Acls().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("attachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().Attachments().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("backendservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().BackendServers().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("cacertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().CaCertificates().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("domainextensions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().DomainExtensions().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("listeners"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().Listeners().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("loadbalancers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().LoadBalancers().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("masterslaveservergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().MasterSlaveServerGroups().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("rules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().Rules().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("servercertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().ServerCertificates().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("servergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().ServerGroups().Informer()}, nil
	case slbv1alpha1.SchemeGroupVersion.WithResource("slbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Slb().V1alpha1().Slbs().Informer()}, nil

		// Group=snapshot.alicloud.kubeform.com, Version=v1alpha1
	case snapshotv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Snapshot().V1alpha1().Policies().Informer()}, nil
	case snapshotv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Snapshot().V1alpha1().Snapshots().Informer()}, nil

		// Group=snat.alicloud.kubeform.com, Version=v1alpha1
	case snatv1alpha1.SchemeGroupVersion.WithResource("entries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Snat().V1alpha1().Entries().Informer()}, nil

		// Group=ssl.alicloud.kubeform.com, Version=v1alpha1
	case sslv1alpha1.SchemeGroupVersion.WithResource("vpnclientcerts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssl().V1alpha1().VpnClientCerts().Informer()}, nil
	case sslv1alpha1.SchemeGroupVersion.WithResource("vpnservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssl().V1alpha1().VpnServers().Informer()}, nil

		// Group=subnet.alicloud.kubeform.com, Version=v1alpha1
	case subnetv1alpha1.SchemeGroupVersion.WithResource("subnets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().Subnets().Informer()}, nil

		// Group=tsdb.alicloud.kubeform.com, Version=v1alpha1
	case tsdbv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tsdb().V1alpha1().Instances().Informer()}, nil

		// Group=vpc.alicloud.kubeform.com, Version=v1alpha1
	case vpcv1alpha1.SchemeGroupVersion.WithResource("flowlogs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().FlowLogs().Informer()}, nil
	case vpcv1alpha1.SchemeGroupVersion.WithResource("vpcs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().Vpcs().Informer()}, nil

		// Group=vpn.alicloud.kubeform.com, Version=v1alpha1
	case vpnv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().Connections().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("customergateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().CustomerGateways().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().Gateways().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("routeentries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().RouteEntries().Informer()}, nil

		// Group=vswitch.alicloud.kubeform.com, Version=v1alpha1
	case vswitchv1alpha1.SchemeGroupVersion.WithResource("vswitches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vswitch().V1alpha1().Vswitches().Informer()}, nil

		// Group=waf.alicloud.kubeform.com, Version=v1alpha1
	case wafv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().Domains().Informer()}, nil
	case wafv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Waf().V1alpha1().Instances().Informer()}, nil

		// Group=yundun.alicloud.kubeform.com, Version=v1alpha1
	case yundunv1alpha1.SchemeGroupVersion.WithResource("bastionhostinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Yundun().V1alpha1().BastionhostInstances().Informer()}, nil
	case yundunv1alpha1.SchemeGroupVersion.WithResource("dbauditinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Yundun().V1alpha1().DbauditInstances().Informer()}, nil

	}

	return nil, fmt.Errorf("no informer found for %v", resource)
}
